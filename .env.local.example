# =============================================================================
# MASTRA CHAT SDK - LOCAL DEVELOPMENT CONFIGURATION
# =============================================================================
# Copy this file to .env.local and fill in your actual values
# This file contains common local development configuration
# For complete configuration options, see .env.example

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================

# Generate a random secret: https://generate-secret.vercel.app/32 or `openssl rand -base64 32`
AUTH_SECRET=your-local-auth-secret-32-characters

# Base URL for local development
NEXTAUTH_URL=http://localhost:3000

# =============================================================================
# DATABASE CONFIGURATION  
# =============================================================================

# Local PostgreSQL database with pgvector extension
POSTGRES_URL=postgresql://postgres:password@localhost:5432/mastra_chat
DATABASE_URL=postgresql://postgres:password@localhost:5432/mastra_chat

# =============================================================================
# AI PROVIDERS - REQUIRED
# =============================================================================

# OpenAI (Required - primary provider)
# Get key: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-openai-api-key-here

# Cohere (Required for RAG/embeddings)
# Get key: https://dashboard.cohere.ai/api-keys  
COHERE_API_KEY=your-cohere-api-key-here

# =============================================================================
# AI PROVIDERS - OPTIONAL (Enable additional models)
# =============================================================================

# Anthropic Claude models
# Get key: https://console.anthropic.com/settings/keys
# ANTHROPIC_API_KEY=sk-ant-your-anthropic-api-key-here

# Google Gemini models  
# Get key: https://aistudio.google.com/app/apikey
# GOOGLE_API_KEY=AIzaSy-your-google-api-key-here

# Groq high-speed inference
# Get key: https://console.groq.com/keys
# GROQ_API_KEY=gsk_your-groq-api-key-here

# =============================================================================
# FILE STORAGE
# =============================================================================

# Vercel Blob for file uploads
# Get token: https://vercel.com/docs/storage/vercel-blob
BLOB_READ_WRITE_TOKEN=vercel_blob_rw_your-token-here

# =============================================================================
# OBSERVABILITY (OPTIONAL)
# =============================================================================

# LangSmith for AI debugging/tracing
# Get key: https://smith.langchain.com/
# LANGSMITH_API_KEY=ls__your-langsmith-api-key-here
# LANGSMITH_PROJECT=mastra-chat-local
# LANGSMITH_TRACING=true

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Environment mode
NODE_ENV=development

# Enable development features
# DEBUG=true
# MASTRA_DEV=true

# Local caching (optional)
# REDIS_URL=redis://localhost:6379/0

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Core features
ENABLE_VOICE_CHAT=true
ENABLE_DOCUMENT_UPLOAD=true
ENABLE_GUEST_ACCESS=true
ENABLE_RAG_SYSTEM=true

# Provider features (automatically enabled when API keys are present)
# ENABLE_ANTHROPIC_MODELS=true
# ENABLE_GOOGLE_MODELS=true  
# ENABLE_GROQ_MODELS=true

# =============================================================================
# QUICK SETUP CHECKLIST
# =============================================================================

# 1. âœ… Copy this file to .env.local
# 2. âœ… Set AUTH_SECRET (generate: https://generate-secret.vercel.app/32)
# 3. âœ… Set OPENAI_API_KEY (get: https://platform.openai.com/api-keys)
# 4. âœ… Set COHERE_API_KEY (get: https://dashboard.cohere.ai/api-keys)
# 5. âœ… Set POSTGRES_URL (local database with pgvector)
# 6. âœ… Set BLOB_READ_WRITE_TOKEN (get: https://vercel.com/storage/blob)
# 7. ðŸ”„ Optional: Add additional provider API keys for more models
# 8. ðŸ”„ Optional: Set up LangSmith for debugging

# =============================================================================
# SECURITY REMINDERS
# =============================================================================

# - Never commit .env.local to version control
# - Use different secrets for development and production  
# - Rotate API keys regularly
# - Monitor API usage and costs
# - Enable 2FA on all service accounts

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# Common issues:
# - Database connection: Ensure PostgreSQL is running with pgvector extension
# - API key errors: Check key format and permissions
# - File upload errors: Verify Blob token permissions
# - Model not available: Check provider API key is set

# For help:
# - Check application logs in terminal
# - Verify environment variables are loaded: console.log(process.env)
# - Test database connection: npm run db:check